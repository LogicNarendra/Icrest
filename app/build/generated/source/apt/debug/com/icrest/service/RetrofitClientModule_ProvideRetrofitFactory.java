// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.icrest.service;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

public final class RetrofitClientModule_ProvideRetrofitFactory implements Factory<Retrofit> {
  private final RetrofitClientModule module;

  private final Provider<OkHttpClient> okHttpClientProvider;

  public RetrofitClientModule_ProvideRetrofitFactory(
      RetrofitClientModule module, Provider<OkHttpClient> okHttpClientProvider) {
    this.module = module;
    this.okHttpClientProvider = okHttpClientProvider;
  }

  @Override
  public Retrofit get() {
    return Preconditions.checkNotNull(
        module.provideRetrofit(okHttpClientProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Retrofit> create(
      RetrofitClientModule module, Provider<OkHttpClient> okHttpClientProvider) {
    return new RetrofitClientModule_ProvideRetrofitFactory(module, okHttpClientProvider);
  }

  public static Retrofit proxyProvideRetrofit(
      RetrofitClientModule instance, OkHttpClient okHttpClient) {
    return instance.provideRetrofit(okHttpClient);
  }
}
