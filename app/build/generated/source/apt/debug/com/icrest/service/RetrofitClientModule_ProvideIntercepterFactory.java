// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.icrest.service;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

public final class RetrofitClientModule_ProvideIntercepterFactory
    implements Factory<HttpLoggingInterceptor> {
  private final RetrofitClientModule module;

  public RetrofitClientModule_ProvideIntercepterFactory(RetrofitClientModule module) {
    this.module = module;
  }

  @Override
  public HttpLoggingInterceptor get() {
    return Preconditions.checkNotNull(
        module.provideIntercepter(), "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<HttpLoggingInterceptor> create(RetrofitClientModule module) {
    return new RetrofitClientModule_ProvideIntercepterFactory(module);
  }

  public static HttpLoggingInterceptor proxyProvideIntercepter(RetrofitClientModule instance) {
    return instance.provideIntercepter();
  }
}
